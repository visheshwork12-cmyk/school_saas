# config/infrastructure/load-balancer/nginx-optimized.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-lb-config
  namespace: default
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    worker_cpu_affinity auto;
    worker_rlimit_nofile 65535;
    
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 4096;
        use epoll;
        multi_accept on;
        accept_mutex off;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time"';
        
        access_log /var/log/nginx/access.log main;
        
        # Performance optimizations
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 75s;
        keepalive_requests 1000;
        
        # Buffer sizes
        client_body_buffer_size 128k;
        client_header_buffer_size 1k;
        client_max_body_size 10m;
        large_client_header_buffers 4 4k;
        
        # Timeouts
        client_body_timeout 12;
        client_header_timeout 12;
        send_timeout 10;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
        
        # Upstream configuration with advanced load balancing
        upstream school_erp_backend {
            least_conn;
            keepalive 32;
            keepalive_requests 100;
            keepalive_timeout 60s;
            
            server backend-1:3000 weight=3 max_fails=3 fail_timeout=30s;
            server backend-2:3000 weight=3 max_fails=3 fail_timeout=30s;
            server backend-3:3000 weight=2 max_fails=3 fail_timeout=30s backup;
            
            # Health check
            check interval=3000 rise=2 fall=3 timeout=1000;
        }
        
        # Sticky sessions for multi-tenant
        upstream school_erp_sticky {
            ip_hash;
            server backend-1:3000 weight=1 max_fails=2 fail_timeout=30s;
            server backend-2:3000 weight=1 max_fails=2 fail_timeout=30s;
            server backend-3:3000 weight=1 max_fails=2 fail_timeout=30s;
        }
        
        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        server {
            listen 80;
            server_name _;
            return 301 https://$host$request_uri;
        }
        
        server {
            listen 443 ssl http2;
            server_name school-erp.example.com;
            
            ssl_certificate /etc/ssl/certs/school-erp.crt;
            ssl_certificate_key /etc/ssl/private/school-erp.key;
            
            # Security headers
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            
            # API routes with rate limiting
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                
                proxy_pass http://school_erp_backend;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                
                # Timeouts
                proxy_connect_timeout 5s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
                
                # Buffer settings
                proxy_buffering on;
                proxy_buffer_size 4k;
                proxy_buffers 8 4k;
                proxy_busy_buffers_size 8k;
            }
            
            # Authentication routes with stricter rate limiting
            location /auth/ {
                limit_req zone=login burst=3 nodelay;
                
                proxy_pass http://school_erp_sticky;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            # Static assets with caching
            location /static/ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Cache-Status $upstream_cache_status;
                
                proxy_pass http://school_erp_backend;
                proxy_cache static_cache;
                proxy_cache_valid 200 1d;
                proxy_cache_valid 404 1m;
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
                proxy_cache_lock on;
            }
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Monitoring endpoint
            location /nginx_status {
                stub_status on;
                access_log off;
                allow 10.0.0.0/8;
                allow 172.16.0.0/12;
                allow 192.168.0.0/16;
                deny all;
            }
        }
        
        # Cache configuration
        proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m 
                         max_size=1g inactive=60m use_temp_path=off;
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-load-balancer
  labels:
    app: nginx-load-balancer
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx-load-balancer
  template:
    metadata:
      labels:
        app: nginx-load-balancer
    spec:
      containers:
      - name: nginx
        image: nginx:1.21-alpine
        ports:
        - containerPort: 80
        - containerPort: 443
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: cache-volume
          mountPath: /var/cache/nginx
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-lb-config
      - name: cache-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-load-balancer-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: LoadBalancer
  selector:
    app: nginx-load-balancer
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
